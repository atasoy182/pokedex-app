{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/inventoryActions.js","components/catchedPokemons/CatchedPokemons.js","redux/actions/favActions.js","components/favorites/Favorites.js","components/toggle/Toggler.js","components/navi/Navi.js","components/common/Common.js","redux/actions/pokemonActions.js","components/pagination/Pagination.js","components/pokemonCard/PokemonCard.js","components/search/SearchBar.js","components/pokemons/PokemonList.js","redux/actions/typeActions.js","components/types/TypesList.js","components/root/Inventory.js","components/globalStyles.js","components/root/Themes.js","components/invontoryDetail/InventoryDetail.js","redux/actions/pokemonDetailActions.js","components/pokemonDetail/PokemonDetail.js","components/root/App.js","components/useDarkMode/UseDarkMode.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/changeTypeReducer.js","redux/reducers/typeListReducer.js","redux/reducers/pokemonListReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/pokemonDetailReducer.js","redux/reducers/favReducer.js","index.js","redux/reducers/configureStore.js"],"names":["CHANGE_TYPE","GET_TYPES_SUCCESS","GET_TYPES_ERROR","GET_TYPES_START","GET_POKEMONS_SUCCESS","GET_POKEMONS_ERROR","GET_POKEMONS_START","GET_POKEMONS_COUNT","ADD_TO_INVENTORY","REMOVE_FROM_INVENTORY","ADD_OR_REMOVE_FAV","GET_POKEMON_SUCCESS","GET_POKEMON_FAMILY_SUCCESS","GET_POKEMON_CLEAR","addToInventory","pokemon","type","actionTypes","payload","removeFromInventory","connect","state","inventory","inventoryReducer","dispatch","actions","bindActionCreators","inventoryActions","props","length","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","className","DropdownMenu","right","map","item","DropdownItem","Badge","color","onClick","name","quantity","divider","to","NavItem","NavLink","addOrRemoveFav","fav","favReducer","favActions","showSuccessAlert","find","poke","id","alertify","success","error","removeFromFav","Toggle","theme","toggleTheme","Row","style","padding","size","marginRight","CustomInput","bsSize","onChange","Navi","Navbar","light","expand","Collapse","navbar","Nav","Favorites","NavbarText","themeMode","typeUrl","imageNotFound","favorutesUrl","getPokemons","offset","limit","data","getPokeDetail","pokemons","requests","index","Promise","resolve","fetch","url","then","response","json","pokeData","push","types","imageUrl","sprites","other","dream_world","front_default","all","getPokemonsSuccess","sort","a","b","toString","result","count","results","catch","PaginationElement","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","onPageActive","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","activeClassName","ownProps","history","useHistory","handleOnClick","useCallback","filter","currentType","includes","toLowerCase","searchText","match","class","Card","alt","src","width","Button","height","CardBody","CardTitle","toUpperCase","slice","CardText","margin","favHandler","SearchBar","Form","onSubmit","e","preventDefault","FormGroup","Input","input","target","value","placeholder","changeTypeReducer","pokemonListReducer","allPokemons","isLoading","pokemonActions","useState","setSearchText","useEffect","Container","handleOnChangeText","Spinner","selectedPage","selected","changeType","getTypes","unshift","createIdForResult","typeListReducer","allTypes","typeActions","ListGroup","flush","ListGroupItem","active","selectType","Inventory","Col","xs","Component","GlobalStyles","createGlobalStyle","body","text","chipBackground","lightTheme","toggleBorder","background","darkTheme","getPokemonSuccess","getPokemon","getFamilyFromChain","chain","family","familyArr","Object","keys","species","arr","split","evolves_to","forEach","item2","child","getPokemonSpecies","flavor_text_entries","language","flavor_text","replace","evoUrl","evolution_chain","getPokemonEvelotionChain","clearPokemon","pokemon_id","params","pokemonDetailReducer","pokemonDetailActions","getPokemonColor","details","abilities","ability","weight","stats","stat","base_stat","App","setTheme","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","path","exact","component","InventoryDetail","PokemonDetail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","message","favs","rootReducer","combineReducers","initialState","action","addedPokemon","p","newState","pokemonItem","assign","addedFav","newState1","newState2","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04abd579.chunk.js","sourcesContent":["export const CHANGE_TYPE = \"CHANGE_TYPE\";\r\nexport const GET_TYPES_SUCCESS = \"GET_TYPES_SUCCESS\";\r\nexport const GET_TYPES_ERROR = \"GET_TYPES_ERROR\";\r\nexport const GET_TYPES_START = \"GET_TYPES_START\";\r\n\r\nexport const GET_POKEMONS_SUCCESS = \"GET_POKEMONS_SUCCESS\";\r\nexport const GET_POKEMONS_ERROR = \"GET_POKEMONS_ERROR\";\r\nexport const GET_POKEMONS_START = \"GET_POKEMONS_START\";\r\nexport const GET_POKEMONS_COUNT = \"GET_POKEMONS_COUNT\";\r\n\r\nexport const ADD_TO_INVENTORY = \"ADD_TO_INVENTORY\";\r\nexport const REMOVE_FROM_INVENTORY = \"REMOVE_FROM_INVENTORY\";\r\n\r\nexport const ADD_OR_REMOVE_FAV = \"ADD_OR_REMOVE_FAV\";\r\n\r\nexport const GET_POKEMON_SUCCESS = \"GET_POKEMON_SUCCESS\";\r\nexport const GET_POKEMON_FAMILY_SUCCESS = \"GET_POKEMON_FAMILY_SUCCESS\";\r\nexport const GET_POKEMON_ERROR = \"GET_POKEMON_ERROR\";\r\nexport const GET_POKEMON_CLEAR = \"GET_POKEMON_CLEAR\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function addToInventory(pokemon) {\r\n  return { type: actionTypes.ADD_TO_INVENTORY, payload: pokemon };\r\n}\r\n\r\nexport function removeFromInventory(pokemon) {\r\n  return { type: actionTypes.REMOVE_FROM_INVENTORY, payload: pokemon };\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as inventoryActions from \"../../redux/actions/inventoryActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CatchedPokemons = (props) => {\r\n  const renderEmpty = () => {\r\n    return (\r\n      <NavItem>\r\n        <NavLink>\r\n          <span className=\"effect\">Inventory Empty</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  };\r\n\r\n  const removeFromInventory = (pokemon) => {\r\n    props.actions.removeFromInventory(pokemon);\r\n  };\r\n\r\n  const renderInventory = () => {\r\n    return (\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          <span className=\"effect\">Inventory</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {props.inventory.map((item) => (\r\n            <DropdownItem>\r\n              {\" \"}\r\n              <Badge\r\n                color=\"danger\"\r\n                onClick={() => {\r\n                  removeFromInventory(item.pokemon);\r\n                }}\r\n              >\r\n                {\"X\"}\r\n              </Badge>{\" \"}\r\n              {item.pokemon.name} <Badge color=\"success\">{item.quantity}</Badge>\r\n            </DropdownItem>\r\n          ))}\r\n          <DropdownItem divider />\r\n          <DropdownItem>\r\n            {\" \"}\r\n            <Link to={\"/inventory\"}>Inventory</Link>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>{props.inventory.length > 0 ? renderInventory() : renderEmpty()}</div>\r\n  );\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      removeFromInventory: bindActionCreators(\r\n        inventoryActions.removeFromInventory,\r\n        dispatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    inventory: state.inventoryReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CatchedPokemons);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function addOrRemoveFav(pokemon) {\r\n  return { type: actionTypes.ADD_OR_REMOVE_FAV, payload: pokemon };\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavItem,\r\n  NavLink,\r\n  Badge,\r\n} from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as favActions from \"../../redux/actions/favActions\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nconst Fovorites = (props) => {\r\n  const renderEmpty = () => {\r\n    return (\r\n      <NavItem>\r\n        <NavLink>\r\n          <span className=\"effect\">Fav Empty</span>\r\n        </NavLink>\r\n      </NavItem>\r\n    );\r\n  };\r\n\r\n  const removeFromFav = (pokemon) => {\r\n    let showSuccessAlert = true;\r\n    if (props.fav.find((poke) => poke.id === pokemon.id)) {\r\n      showSuccessAlert = false;\r\n    }\r\n    props.actions.addOrRemoveFav(pokemon);\r\n    if (showSuccessAlert) {\r\n      alertify.success(pokemon.name + \" added to favorites\");\r\n    } else {\r\n      alertify.error(pokemon.name + \" removed from favorites\");\r\n    }\r\n  };\r\n\r\n  const renderInventory = () => {\r\n    return (\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          <span className=\"effect\">Favorites</span>\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {props.fav.map((item) => (\r\n            <DropdownItem>\r\n              {\" \"}\r\n              <Badge\r\n                color=\"danger\"\r\n                onClick={() => {\r\n                  removeFromFav(item);\r\n                }}\r\n              >\r\n                {\"X\"}\r\n              </Badge>{\" \"}\r\n              {item.name}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  };\r\n\r\n  return <div>{props.fav.length > 0 ? renderInventory() : renderEmpty()}</div>;\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      addOrRemoveFav: bindActionCreators(favActions.addOrRemoveFav, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    fav: state.favReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fovorites);\r\n","import React from \"react\";\r\nimport { func, string } from \"prop-types\";\r\nimport { CustomInput, Row } from \"reactstrap\";\r\nimport { CgSun } from \"react-icons/cg\";\r\nimport { HiMoon } from \"react-icons/hi\";\r\n\r\nconst Toggle = ({ theme, toggleTheme }) => {\r\n  return (\r\n    <Row style={{ padding: 5 }}>\r\n      <CgSun size={20} style={{ marginRight: 5 }} />\r\n      <CustomInput\r\n        bsSize=\"lg\"\r\n        onChange={toggleTheme}\r\n        type=\"switch\"\r\n        id=\"exampleCustomSwitch\"\r\n        name=\"customSwitch\"\r\n      />\r\n      <HiMoon size={20} />\r\n    </Row>\r\n  );\r\n};\r\nToggle.propTypes = {\r\n  theme: string.isRequired,\r\n  toggleTheme: func.isRequired,\r\n};\r\nexport default Toggle;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport CatchedPokemons from \"../catchedPokemons/CatchedPokemons\";\r\nimport Favorites from \"../favorites/Favorites\";\r\nimport Toggle from \"../toggle/Toggler\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navi = (props) => {\r\n  return (\r\n    <div>\r\n      <Navbar light expand=\"md\">\r\n        <Collapse navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>\r\n                <Link to={\"/\"}>\r\n                  <h5>Find</h5>\r\n                </Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            <CatchedPokemons />\r\n            <Favorites />\r\n          </Nav>\r\n          <NavbarText>\r\n            <Toggle theme={props.themeMode} toggleTheme={props.toggleTheme} />\r\n          </NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navi;\r\n","export const typeUrl = \"https://veekun.com/dex/media/types/en/\";\r\nexport const imageNotFound =\r\n  \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTfjuWMzNmPYRxOegksXlPtPaiB-4w093AnFg&usqp=CAU\";\r\nexport const pokeBall =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Pok%C3%A9_Ball_icon.svg/770px-Pok%C3%A9_Ball_icon.svg.png\";\r\nexport const favorutesUrl =\r\n  \"https://icon-library.com/images/favorite-icon/favorite-icon-14.jpg\";\r\nexport const detailUrl = \"https://img.icons8.com/office/452/details-pane.png\";\r\nexport const heartIcon =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/52/Heart_icon_red_hollow.svg/2166px-Heart_icon_red_hollow.svg.png\";\r\n","import { imageNotFound } from \"../../components/common/Common\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getPokemonsSuccess(pokemons) {\r\n  return { type: actionTypes.GET_POKEMONS_SUCCESS, payload: pokemons };\r\n}\r\n\r\nexport function getPokemonsError(message) {\r\n  return { type: actionTypes.GET_POKEMONS_ERROR, payload: message };\r\n}\r\n\r\nexport function getPokemonsStart() {\r\n  return { type: actionTypes.GET_POKEMONS_START };\r\n}\r\n\r\nexport function getPokemonsCount(count) {\r\n  return { type: actionTypes.GET_POKEMONS_COUNT, payload: count };\r\n}\r\n\r\nexport function getPokemons(offset, limit) {\r\n  return function (dispatch) {\r\n    let data = [];\r\n    const getPokeDetail = (pokemons) => {\r\n      let requests = pokemons.map((pokemon, index) => {\r\n        return new Promise((resolve) => {\r\n          fetch(pokemon.url)\r\n            .then((response) => response.json())\r\n            .then((pokeData) => {\r\n              data.push({\r\n                id: pokeData.id,\r\n                name: pokeData.name,\r\n                types: pokeData.types.map((type) => type.type.name),\r\n                imageUrl:\r\n                  pokeData.sprites.other.dream_world.front_default ||\r\n                  pokeData.sprites.other[\"official-artwork\"].front_default ||\r\n                  imageNotFound,\r\n              });\r\n              resolve();\r\n            });\r\n        });\r\n      });\r\n      Promise.all(requests).then(() =>\r\n        dispatch(getPokemonsSuccess(data.sort((a, b) => a.id - b.id)))\r\n      );\r\n    };\r\n    dispatch(getPokemonsStart());\r\n    let url =\r\n      \"https://pokeapi.co/api/v2/pokemon?offset=\" +\r\n      offset.toString() +\r\n      \"&limit=\" +\r\n      limit.toString();\r\n\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        dispatch(getPokemonsCount(result.count));\r\n        return getPokeDetail(result.results);\r\n      })\r\n      .catch((error) => dispatch(getPokemonsError(error)));\r\n  };\r\n}\r\n","import ReactPaginate from \"react-paginate\";\r\n\r\nexport const PaginationElement = (props) => {\r\n  return (\r\n    <ReactPaginate\r\n      previousLabel={\"previous\"}\r\n      nextLabel={\"next\"}\r\n      breakLabel={\"...\"}\r\n      pageCount={props.pageCount}\r\n      marginPagesDisplayed={2}\r\n      pageRangeDisplayed={3}\r\n      onPageChange={props.onPageChange}\r\n      onPageActive={props.onPageActive}\r\n      containerClassName={\"pagination justify-content-center\"}\r\n      pageClassName={\"page-item\"}\r\n      pageLinkClassName={\"page-link\"}\r\n      previousClassName={\"page-item\"}\r\n      previousLinkClassName={\"page-link\"}\r\n      nextClassName={\"page-item\"}\r\n      nextLinkClassName={\"page-link\"}\r\n      breakClassName={\"page-item\"}\r\n      breakLinkClassName={\"page-link\"}\r\n      activeClassName={\"active\"}\r\n    />\r\n  );\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, CardBody, CardTitle, CardText, Button } from \"reactstrap\";\r\nimport { favorutesUrl, heartIcon, pokeBall, typeUrl } from \"../common/Common\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as inventoryActions from \"../../redux/actions/inventoryActions\";\r\nimport * as favActions from \"../../redux/actions/favActions\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nconst PokemonCard = (props) => {\r\n  const history = useHistory();\r\n  const handleOnClick = useCallback(\r\n    () => history.push(\"/\" + props.poke.id),\r\n    [history]\r\n  );\r\n\r\n  const catchedHandler = (poke) => {\r\n    props.actions.addToInventory({ quantity: 1, pokemon: poke });\r\n    alertify.success(poke.name + \" catched\");\r\n  };\r\n\r\n  const favHandler = (poke) => {\r\n    let showSuccessAlert = true;\r\n    if (props.fav.find((pokemon) => pokemon.id === poke.id)) {\r\n      showSuccessAlert = false;\r\n    }\r\n    props.actions.addOrRemoveFav(poke);\r\n    if (showSuccessAlert) {\r\n      alertify.success(poke.name + \" added to favorites\");\r\n    } else {\r\n      alertify.error(poke.name + \" removed from favorites\");\r\n    }\r\n  };\r\n\r\n  if (\r\n    (props.filter.currentType.name === \"All\" ||\r\n      props.poke.types.includes(props.filter.currentType.name.toLowerCase())) &&\r\n    (props.filter.searchText === \"\" ||\r\n      props.poke.name.toLowerCase().match(props.filter.searchText))\r\n  ) {\r\n    return (\r\n      <div class=\"text-center\">\r\n        <Card className=\"Regular shadow\">\r\n          <div>\r\n            <div>\r\n              {props.fav.find((pokemon) => pokemon.id === props.poke.id) ? (\r\n                <img alt=\"...\" src={favorutesUrl} width={50} />\r\n              ) : null}\r\n            </div>\r\n            <Button\r\n              color=\".btn-primary-outline\"\r\n              onClick={() => {\r\n                handleOnClick();\r\n              }}\r\n            >\r\n              <img\r\n                width={150}\r\n                height={150}\r\n                src={props.poke.imageUrl}\r\n                alt=\"...\"\r\n                class=\"rounded mx-auto d-block\"\r\n                style={{ \"object-fit\": \"contain\" }}\r\n              />\r\n            </Button>\r\n          </div>\r\n          <CardBody>\r\n            <CardTitle>\r\n              <h5>\r\n                {props.poke.name[0].toUpperCase() +\r\n                  props.poke.name.slice(1).toLowerCase()}\r\n              </h5>\r\n            </CardTitle>\r\n            <CardText>\r\n              {props.poke.types.map((type) => {\r\n                return (\r\n                  <img\r\n                    width={40}\r\n                    style={{ margin: 2 }}\r\n                    alt=\"...\"\r\n                    src={typeUrl + type.toLowerCase() + \".png\"}\r\n                  />\r\n                );\r\n              })}\r\n            </CardText>\r\n            <Button\r\n              color=\".btn-primary-outline\"\r\n              onClick={() => {\r\n                catchedHandler(props.poke);\r\n              }}\r\n            >\r\n              <img alt=\"...\" src={pokeBall} width={50} />\r\n            </Button>\r\n            <Button\r\n              color=\".btn-primary-outline\"\r\n              onClick={() => {\r\n                favHandler(props.poke);\r\n              }}\r\n            >\r\n              <img alt=\"...\" src={heartIcon} width={50} />\r\n            </Button>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nfunction mapStateToPops(state, ownProps) {\r\n  return {\r\n    fav: state.favReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      addToInventory: bindActionCreators(\r\n        inventoryActions.addToInventory,\r\n        dispatch\r\n      ),\r\n      addOrRemoveFav: bindActionCreators(favActions.addOrRemoveFav, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToPops, mapDispatchToProps)(PokemonCard);\r\n","import { Form, FormGroup, Input } from \"reactstrap\";\r\n\r\nexport const SearchBar = (props) => {\r\n  return (\r\n    <Form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <FormGroup>\r\n        <Input\r\n          onChange={(input) => props.onChange(input.target.value)}\r\n          name=\"search\"\r\n          placeholder=\"Search\"\r\n          className=\"rounded\"\r\n        />\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Spinner } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as pokemonActions from \"../../redux/actions/pokemonActions\";\r\nimport * as inventoryActions from \"../../redux/actions/inventoryActions\";\r\nimport { PaginationElement } from \"../pagination/Pagination\";\r\nimport PokemonCard from \"../pokemonCard/PokemonCard\";\r\nimport { SearchBar } from \"../search/SearchBar\";\r\n\r\nconst PokemonList = (props) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const pokemonsPerPage = 50;\r\n\r\n  useEffect(() => {\r\n    props.actions.getPokemons(0, pokemonsPerPage);\r\n  }, []);\r\n\r\n  const handlePageChanged = (selectedPage) => {\r\n    props.actions.getPokemons(selectedPage * pokemonsPerPage, pokemonsPerPage);\r\n  };\r\n\r\n  const getSpinner = () => {\r\n    return <Spinner color=\"primary\" />;\r\n  };\r\n\r\n  const getBody = () => {\r\n    return (\r\n      <div className=\"card-columns\">\r\n        {props.pokemons.map((poke, index) => (\r\n          <PokemonCard\r\n            key={index}\r\n            poke={poke}\r\n            filter={{ currentType: props.currentType, searchText: searchText }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleOnChangeText = (value) => {\r\n    setSearchText(value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SearchBar onChange={(value) => handleOnChangeText(value)} />\r\n      {props.isLoading ? getSpinner() : getBody()}\r\n      <PaginationElement\r\n        pageCount={props.count / pokemonsPerPage}\r\n        onPageChange={(data) => handlePageChanged(data.selected)}\r\n      ></PaginationElement>\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction mapStateToPops(state) {\r\n  return {\r\n    currentType: state.changeTypeReducer,\r\n    pokemons: state.pokemonListReducer.allPokemons,\r\n    isLoading: state.pokemonListReducer.isLoading,\r\n    count: state.pokemonListReducer.count,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getPokemons: bindActionCreators(pokemonActions.getPokemons, dispatch),\r\n      addToInventory: bindActionCreators(\r\n        inventoryActions.addToInventory,\r\n        dispatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToPops, mapDispatchToProps)(PokemonList);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function changeType(type) {\r\n  return { type: actionTypes.CHANGE_TYPE, payload: type };\r\n}\r\n\r\nexport function getTypesSuccess(types) {\r\n  return { type: actionTypes.GET_TYPES_SUCCESS, payload: types };\r\n}\r\n\r\nexport function getTypesError(message) {\r\n  return { type: actionTypes.GET_TYPES_ERROR, payload: message };\r\n}\r\n\r\nexport function getTypesStart() {\r\n  return { type: actionTypes.GET_TYPES_START };\r\n}\r\n\r\nexport function getTypes() {\r\n  return function (dispatch) {\r\n    const createIdForResult = (result) => {\r\n      result.map((item, index) => {\r\n        item[\"id\"] = index;\r\n        item[\"name\"] =\r\n          item[\"name\"][0].toUpperCase() + item[\"name\"].slice(1).toLowerCase();\r\n      });\r\n      result.unshift({ name: \"All\" });\r\n      return result;\r\n    };\r\n    dispatch(getTypesStart());\r\n    let url = \"https://pokeapi.co/api/v2/type\";\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) =>\r\n        dispatch(getTypesSuccess(createIdForResult(result.results)))\r\n      )\r\n      .catch((error) => dispatch(getTypesError(error)));\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Spinner,\r\n  Row,\r\n  Container,\r\n} from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as typeActions from \"../../redux/actions/typeActions\";\r\n\r\nconst TypesList = (props) => {\r\n  useEffect(() => {\r\n    props.actions.getTypes();\r\n  }, []);\r\n\r\n  const selectType = (type) => {\r\n    props.actions.changeType(type);\r\n  };\r\n\r\n  const getSpinner = () => {\r\n    return (\r\n      <Row>\r\n        <Spinner color=\"primary\" />\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  const getBody = () => {\r\n    return (\r\n      <ListGroup flush>\r\n        {props.types.map((type, index) => (\r\n          <ListGroupItem\r\n            active={type.id === props.currentType.id}\r\n            key={index}\r\n            onClick={() => selectType(type)}\r\n          >\r\n            <span style={{ color: \"black\" }}>{type.name}</span>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n    );\r\n  };\r\n\r\n  return <Container>{props.isLoading ? getSpinner() : getBody()}</Container>;\r\n};\r\n\r\nfunction mapStateToPops(state) {\r\n  return {\r\n    currentType: state.changeTypeReducer,\r\n    types: state.typeListReducer.allTypes,\r\n    isLoading: state.typeListReducer.isLoading,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getTypes: bindActionCreators(typeActions.getTypes, dispatch),\r\n      changeType: bindActionCreators(typeActions.changeType, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToPops, mapDispatchToProps)(TypesList);\r\n","import React, { Component } from \"react\";\r\nimport PokemonList from \"../pokemons/PokemonList\";\r\nimport TypesList from \"../types/TypesList\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nexport default class Inventory extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs=\"2\">\r\n            <TypesList></TypesList>\r\n          </Col>\r\n          <Col xs=\"10\">\r\n            <PokemonList></PokemonList>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  h5, th, td, body, div, .effect {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.50s linear;\r\n  };\r\n\r\n  .chip {\r\n    display: inline-block;\r\n    padding: 0 15px;\r\n    margin: 0 5px;\r\n    height: 50px;\r\n    font-size: 16px;\r\n    line-height: 50px;\r\n    border-radius: 25px;\r\n    background-color: ${({ theme }) => theme.chipBackground};\r\n  };\r\n\r\n  .statChip {\r\n    display: inline-block;\r\n    padding: 5px;\r\n    margin: 5px;\r\n    border-radius: 25px;\r\n    background-color: ${({ theme }) => theme.chipBackground};\r\n  };\r\n\r\n  `;\r\n","export const lightTheme = {\r\n  body: \"#FFF\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  background: \"#363537\",\r\n  chipBackground: \"#f1f1f1\",\r\n};\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  background: \"#999\",\r\n  chipBackground: \"#c2c0ba\",\r\n};\r\n","import { Col, Button } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as inventoryActions from \"../../redux/actions/inventoryActions\";\r\nimport alertify from \"alertifyjs\";\r\nimport PokemonCard from \"../pokemonCard/PokemonCard\";\r\n\r\nconst InventoryDetail = (props) => {\r\n  const removeFromInventory = (pokemon) => {\r\n    props.actions.removeFromInventory(pokemon);\r\n    alertify.error(pokemon.name + \" removed\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"row\">\r\n        {props.inventory.map((poke, index) => (\r\n          <Col xs=\"3\">\r\n            <PokemonCard\r\n              key={index}\r\n              poke={poke.pokemon}\r\n              filter={{ currentType: { name: \"All\" }, searchText: \"\" }}\r\n            />\r\n            <div class=\"d-flex justify-content-center\">\r\n              <Button\r\n                color=\"danger\"\r\n                onClick={() => removeFromInventory(poke.pokemon)}\r\n              >\r\n                Release\r\n              </Button>\r\n              <span>Quantity: {poke.quantity}</span>\r\n            </div>\r\n            <p></p>\r\n          </Col>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      removeFromInventory: bindActionCreators(\r\n        inventoryActions.removeFromInventory,\r\n        dispatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    inventory: state.inventoryReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InventoryDetail);\r\n","import { imageNotFound } from \"../../components/common/Common\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getPokemonSuccess(pokemon) {\r\n  return { type: actionTypes.GET_POKEMON_SUCCESS, payload: pokemon };\r\n}\r\n\r\nexport function getPokemonFamilySuccess(pokemon) {\r\n  return { type: actionTypes.GET_POKEMON_FAMILY_SUCCESS, payload: pokemon };\r\n}\r\n\r\nexport function getPokemon(id) {\r\n  const getFamilyFromChain = (chain, dispatch) => {\r\n    const familyArr = [];\r\n    if (Object.keys(chain.species).length > 0) {\r\n      var arr = chain.species.url.split(\"/\");\r\n      familyArr.push(arr[arr.length - 2]);\r\n    }\r\n    if (Object.keys(chain.evolves_to).length > 0) {\r\n      chain.evolves_to.forEach((item) => {\r\n        if (item.species) {\r\n          var arr = item.species.url.split(\"/\");\r\n          familyArr.push(arr[arr.length - 2]);\r\n        }\r\n        if (Object.keys(item.evolves_to).length > 0) {\r\n          item.evolves_to.forEach((item2) => {\r\n            if (item2.species) {\r\n              var arr = item2.species.url.split(\"/\");\r\n              familyArr.push(arr[arr.length - 2]);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    dispatch(getPokemonsFamily(familyArr));\r\n    return familyArr;\r\n  };\r\n\r\n  const getPokemonEvelotionChain = (pokemon, dispatch) => {\r\n    let url = \"\";\r\n    if (pokemon[\"details\"][\"evoUrl\"]) {\r\n      url = pokemon[\"details\"][\"evoUrl\"];\r\n    } else {\r\n      return dispatch(getPokemonSuccess(pokemon));\r\n    }\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        pokemon[\"details\"][\"evelotions\"] = getFamilyFromChain(\r\n          result.chain,\r\n          dispatch\r\n        );\r\n        return dispatch(getPokemonSuccess(pokemon));\r\n      })\r\n      .catch((error) => {\r\n        return dispatch(getPokemonSuccess(pokemon));\r\n      });\r\n  };\r\n\r\n  const getPokemonSpecies = (pokemon, dispatch) => {\r\n    let url = \"https://pokeapi.co/api/v2/pokemon-species/\" + pokemon.id;\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        pokemon[\"details\"] = {\r\n          color: result.color.name,\r\n          text: result.flavor_text_entries\r\n            .find((text) => text.language.name === \"en\")\r\n            .flavor_text.replace(\"\\f\", \"\"),\r\n          evoUrl: result.evolution_chain.url,\r\n        };\r\n        getPokemonEvelotionChain(pokemon, dispatch);\r\n      })\r\n      .catch((error) => {\r\n        return dispatch(getPokemonSuccess(pokemon));\r\n      });\r\n  };\r\n\r\n  return function (dispatch) {\r\n    let url = \"https://pokeapi.co/api/v2/pokemon/\" + id;\r\n    return fetch(url)\r\n      .then((response) => response.json())\r\n      .then((result) => getPokemonSpecies(result, dispatch))\r\n      .catch((error) => {});\r\n  };\r\n}\r\n\r\nexport function getPokemonsFamily(family) {\r\n  return function (dispatch) {\r\n    const data = [];\r\n    let requests = family.map((child, index) => {\r\n      return new Promise((resolve) => {\r\n        let url = \"https://pokeapi.co/api/v2/pokemon/\" + child;\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((pokeData) => {\r\n            data.push({\r\n              id: pokeData.id,\r\n              name: pokeData.name,\r\n              types: pokeData.types.map((type) => type.type.name),\r\n              imageUrl:\r\n                pokeData.sprites.other.dream_world.front_default ||\r\n                pokeData.sprites.other[\"official-artwork\"].front_default ||\r\n                imageNotFound,\r\n            });\r\n            resolve();\r\n          });\r\n      });\r\n    });\r\n    Promise.all(requests).then(() =>\r\n      dispatch(getPokemonFamilySuccess(data.sort((a, b) => a.id - b.id)))\r\n    );\r\n  };\r\n}\r\n\r\nexport function clearPokemon() {\r\n  return { type: actionTypes.GET_POKEMON_CLEAR };\r\n}\r\n","import { Container, Row, Col } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport React, { useEffect } from \"react\";\r\nimport * as pokemonDetailActions from \"../../redux/actions/pokemonDetailActions\";\r\nimport * as favActions from \"../../redux/actions/favActions\";\r\nimport { favorutesUrl, imageNotFound, typeUrl } from \"../common/Common\";\r\nimport alertify from \"alertifyjs\";\r\n\r\nconst PokemonDetail = (props) => {\r\n  useEffect(() => {\r\n    props.actions.getPokemon(props.id);\r\n    return () => {\r\n      props.actions.clearPokemon();\r\n    };\r\n  }, []);\r\n\r\n  const getFlavorText = () => {\r\n    if (props.pokemon.details) {\r\n      return props.pokemon.details.text;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const getPokemonColor = () => {\r\n    if (props.pokemon.details) {\r\n      return props.pokemon.details.color;\r\n    }\r\n    return \"black\";\r\n  };\r\n\r\n  const favHandler = () => {\r\n    let showSuccessAlert = true;\r\n\r\n    if (props.fav.find((pokemon) => pokemon.id === props.pokemon.id)) {\r\n      showSuccessAlert = false;\r\n    }\r\n    props.actions.addOrRemoveFav(props.pokemon);\r\n    if (showSuccessAlert) {\r\n      alertify.success(props.pokemon.name + \" added to favorites\");\r\n    } else {\r\n      alertify.error(props.pokemon.name + \" removed from favorites\");\r\n    }\r\n  };\r\n\r\n  const getFamily = () => {\r\n    if (props.pokemon.family) {\r\n      return (\r\n        <div class=\"text-center\">\r\n          <p></p>\r\n          <h4>\r\n            <b>FAMILY</b>\r\n          </h4>\r\n          <div class=\"d-flex justify-content-center\">\r\n            {props.pokemon.family.length > 0\r\n              ? props.pokemon.family.map((item) => (\r\n                  <img\r\n                    height=\"70\"\r\n                    src={item.imageUrl}\r\n                    alt=\"...\"\r\n                    class=\"rounded mx-auto d-block\"\r\n                    style={{ \"object-fit\": \"contain\" }}\r\n                  />\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const getBody = () => {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs=\"6\">\r\n            {\r\n              <div>\r\n                <img\r\n                  width=\"60%\"\r\n                  src={\r\n                    props.pokemon.sprites.other.dream_world.front_default ||\r\n                    props.pokemon.sprites.other[\"official-artwork\"]\r\n                      .front_default ||\r\n                    imageNotFound\r\n                  }\r\n                  alt=\"...\"\r\n                  class=\"rounded mx-auto d-block\"\r\n                  style={{ \"object-fit\": \"contain\" }}\r\n                />\r\n\r\n                <div class=\"text-center\">\r\n                  <br />\r\n                  <h4>\r\n                    <b>ABILITIES</b>\r\n                  </h4>\r\n\r\n                  {props.pokemon.abilities.map((ability) => (\r\n                    <div class=\"chip\">{ability.ability.name}</div>\r\n                  ))}\r\n                </div>\r\n\r\n                {getFamily()}\r\n              </div>\r\n            }\r\n          </Col>\r\n          <Col xs=\"6\">\r\n            <h1 className=\"display-4\" style={{ color: getPokemonColor() }}>\r\n              {props.pokemon.name[0].toUpperCase() +\r\n                props.pokemon.name.slice(1).toLowerCase()}\r\n\r\n              {props.fav.find((pokemon) => pokemon.id === props.pokemon.id) ? (\r\n                <img\r\n                  onClick={() => {\r\n                    favHandler();\r\n                  }}\r\n                  alt=\"...\"\r\n                  src={favorutesUrl}\r\n                  width={50}\r\n                />\r\n              ) : null}\r\n            </h1>\r\n            <p>\r\n              {props.pokemon.types.map((type) => {\r\n                return (\r\n                  <img\r\n                    width={40}\r\n                    style={{ margin: 2 }}\r\n                    alt=\"...\"\r\n                    src={typeUrl + type.type.name.toLowerCase() + \".png\"}\r\n                  />\r\n                );\r\n              })}\r\n              <b> Height: </b> {props.pokemon.height} <b> Weight: </b>{\" \"}\r\n              {props.pokemon.weight}\r\n            </p>\r\n            {props.pokemon.stats.map((stat) => (\r\n              <div class=\"stats\">\r\n                <b style={{ color: getPokemonColor() }}>{stat.stat.name}</b>\r\n                <div class=\"statChip\"> {stat.base_stat}</div>\r\n              </div>\r\n            ))}\r\n            <p></p>\r\n            <p>{getFlavorText()}</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {Object.keys(props.pokemon).length ? getBody() : null}\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getPokemon: bindActionCreators(pokemonDetailActions.getPokemon, dispatch),\r\n      clearPokemon: bindActionCreators(\r\n        pokemonDetailActions.clearPokemon,\r\n        dispatch\r\n      ),\r\n      addOrRemoveFav: bindActionCreators(favActions.addOrRemoveFav, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  let pokemon_id = ownProps.match.params.pokemon_id;\r\n  return {\r\n    pokemon: state.pokemonDetailReducer,\r\n    id: pokemon_id,\r\n    fav: state.favReducer,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonDetail);\r\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport Navi from \"../navi/Navi\";\nimport Inventory from \"./Inventory\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"../globalStyles\";\nimport { lightTheme, darkTheme } from \"./Themes\";\nimport { useDarkMode } from \"../useDarkMode/UseDarkMode\";\nimport { Switch, Route } from \"react-router-dom\";\nimport InventoryDetail from \"../invontoryDetail/InventoryDetail\";\nimport PokemonDetail from \"../pokemonDetail/PokemonDetail\";\n\nconst App = () => {\n  const [theme, themeToggler] = useDarkMode();\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles />\n      <Container>\n        <Navi themeMode={themeMode} toggleTheme={themeToggler} />\n        <Switch>\n          <Route path=\"/\" exact component={Inventory} />\n          <Route path=\"/poke-api\" component={Inventory}/>\n          <Route path=\"/inventory\" exact component={InventoryDetail} />\n          <Route path=\"/:pokemon_id\" exact component={PokemonDetail} />\n        </Switch>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => {\r\n    theme === \"light\" ? setMode(\"dark\") : setMode(\"light\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    localTheme && setTheme(localTheme);\r\n  }, []);\r\n  return [theme, themeToggler];\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default {\r\n  currentType: {\r\n    name: \"All\",\r\n  },\r\n  types: {\r\n    isLoading: false,\r\n    allTypes: [],\r\n    message: \"\",\r\n  },\r\n  pokemons: {\r\n    isLoading: false,\r\n    allPokemons: [],\r\n    message: \"\",\r\n  },\r\n  inventory: [],\r\n  pokemon: {},\r\n  favs: [],\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport changeTypeReducer from \"./changeTypeReducer\";\r\nimport typeListReducer from \"./typeListReducer\";\r\nimport pokemonListReducer from \"./pokemonListReducer\";\r\nimport inventoryReducer from \"./inventoryReducer\";\r\nimport pokemonDetailReducer from \"./pokemonDetailReducer\";\r\nimport favReducer from \"./favReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  changeTypeReducer,\r\n  typeListReducer,\r\n  pokemonListReducer,\r\n  inventoryReducer,\r\n  pokemonDetailReducer,\r\n  favReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function changeTypeReducer(\r\n  state = initialState.currentType,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.CHANGE_TYPE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function typeListReducer(state = initialState.types, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_TYPES_START:\r\n      return { ...state, isLoading: true, message: \"\" };\r\n    case actionTypes.GET_TYPES_SUCCESS:\r\n      return { ...state, allTypes: action.payload, isLoading: false };\r\n    case actionTypes.GET_TYPES_ERROR:\r\n      return { ...state, message: action.payload, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function pokemonListReducer(\r\n  state = initialState.pokemons,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_POKEMONS_START:\r\n      return { ...state, isLoading: true, message: \"\" };\r\n    case actionTypes.GET_POKEMONS_COUNT:\r\n      return { ...state, count: action.payload };\r\n    case actionTypes.GET_POKEMONS_SUCCESS:\r\n      return { ...state, allPokemons: action.payload, isLoading: false };\r\n    case actionTypes.GET_POKEMONS_ERROR:\r\n      return { ...state, message: action.payload, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function inventoryReducer(\r\n  state = initialState.inventory,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_INVENTORY:\r\n      let addedPokemon = state.find(\r\n        (p) => p.pokemon.id === action.payload.pokemon.id\r\n      );\r\n      if (addedPokemon) {\r\n        let newState = state.map((pokemonItem) => {\r\n          if (pokemonItem.pokemon.id === action.payload.pokemon.id) {\r\n            return Object.assign({}, addedPokemon, {\r\n              quantity: addedPokemon.quantity + 1,\r\n            });\r\n          }\r\n          return pokemonItem;\r\n        });\r\n        return newState;\r\n      } else {\r\n        return [...state, { ...action.payload }];\r\n      }\r\n    case actionTypes.REMOVE_FROM_INVENTORY:\r\n      return state.filter(\r\n        (pokemonItem) => pokemonItem.pokemon.id !== action.payload.id\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function pokemonDetailReducer(\r\n  state = initialState.pokemon,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_POKEMON_SUCCESS:\r\n      return { ...state, ...action.payload };\r\n    case actionTypes.GET_POKEMON_FAMILY_SUCCESS:\r\n      return { ...state, ...{ family: action.payload } };\r\n    case actionTypes.GET_POKEMON_CLEAR:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function favReducer(state = initialState.favs, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_OR_REMOVE_FAV:\r\n      let addedFav = state.find((poke) => poke.id === action.payload.id);\r\n      if (addedFav) {\r\n        let newState1 = [...state];\r\n        return newState1.filter((fav) => fav.id !== action.payload.id);\r\n      } else {\r\n        let newState2 = [...state];\r\n        newState2.push(action.payload);\r\n        return newState2;\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/root/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/reducers/configureStore\";\nimport \"alertifyjs/build/css/alertify.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"./index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore() {\r\n  return createStore(rootReducer, applyMiddleware(thunk));\r\n}\r\n"],"sourceRoot":""}